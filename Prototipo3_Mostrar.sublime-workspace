{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class CargarObras : MonoBehaviour\n{\n    void Start()\n    {\n        StartCoroutine(cargar());\n    }\n    public IEnumerator cargar()\n    {\n    \tGameObject.\n        while (!DatosUsuario.Instance.datosCompletos)\n        {\n            yield return null;\n        }\n        int cantidadObras = DatosUsuario.Instance.cantidadObras();\n        for (int i = 0; i < cantidadObras; i++)\n        {\n            StartCoroutine(MostrarObra(i));\n        }\n    }\n    private IEnumerator MostrarObra(int index)\n    {\n        string url = DatosUsuario.Instance.obras[index].url;\n        string tipo = DatosUsuario.Instance.obras[index].tipo;\n\n        if (tipo.Equals(\"escultura\"))\n        {\n            WWW www = new WWW(url);\n            while (!www.isDone)\n            {\n                yield return null;\n            }\n            AssetBundle obra = www.assetBundle;\n            GameObject mya = obra.LoadAsset(\"Obra\") as GameObject;\n            GameObject obraPresentada = Instantiate(mya);\n            GameObject modelo3D = GameObject.Find(\"Modelo\" + DatosUsuario.Instance.obras[index].id);\n            GameObject obraPrincipal = modelo3D.transform.GetChild(0).gameObject;\n\n            obraPrincipal.AddComponent<AbrirObra>();\n            obraPrincipal.GetComponent<AbrirObra>().id = DatosUsuario.Instance.obras[index].id;\n            obraPresentada.transform.position = DatosUsuario.Instance.obras[index].posicion;\n            GameObject contenedorObra = GameObject.Find(\"Obras\");\n            obraPresentada.transform.parent = contenedorObra.transform;\n            obraPresentada.transform.Rotate(Vector3.up, DatosUsuario.Instance.obras[index].anguloRotacion);\n        }\n        else if (tipo.Equals(\"pintura\"))\n        {\n            GameObject cuadro = (GameObject)Resources.Load(\"Prefabs/Obra\") as GameObject;\n            GameObject obraPresentada = Instantiate(cuadro, transform);\n            GameObject contenedorObra = GameObject.Find(\"Obras\");\n            obraPresentada.transform.parent = contenedorObra.transform;\n            obraPresentada.transform.Rotate(Vector3.up, DatosUsuario.Instance.obras[index].anguloRotacion);\n            obraPresentada.transform.position = DatosUsuario.Instance.obras[index].posicion;\n            using (WWW www = new WWW(url))\n            {\n                yield return www;\n                //GameObject marco = GameObject.Find(\"Cuadro\");\n\t\t\t\tGameObject marco = obraPresentada.transform.Find(\"Cuadro\").gameObject;\n                marco.AddComponent<AbrirObra>();\n                marco.GetComponent<AbrirObra>().id = DatosUsuario.Instance.obras[index].id;\n                marco.GetComponent<Renderer>().material.mainTexture = www.texture;\n            }\n        }\n    }\n}\n",
			"file": "Assets/Scripts/CargarObras.cs",
			"file_size": 2830,
			"file_write_time": 131678922187214589,
			"settings":
			{
				"buffer_size": 2780,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\npublic class AbrirObra : MonoBehaviour\n{\n    private int _id;\n    private void OnMouseUpAsButton()\n    {\n        GameObject.Find(\"CanvasIntroduccion\").GetComponent<ControlVisibilidadCanvas>().activarCanvas();\n        ObraActual.Instance.idObraActual = id;\n    }\n    public int id\n    {\n        get { return _id; }\n        set { _id = value; }\n    }\n}\n",
			"file": "Assets/Scripts/AbrirObra.cs",
			"file_size": 433,
			"file_write_time": 131678968946130000,
			"settings":
			{
				"buffer_size": 430,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "packa",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 564.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/AndresFelipe/Documents/ProyectosTesis/ProyectosUnity/Prototipo3_Mostrar/Assets/Scripts/AbrirObra.cs",
		"/C/Users/AndresFelipe/Documents/ProyectosTesis/ProyectosUnity/Prototipo3_Mostrar/Assets/Scripts/Pruebas.cs",
		"/C/Users/AndresFelipe/Documents/ProyectosTesis/ProyectosUnity/Prototipo3_Mostrar/Prototipo3_Mostrar.sln"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/CargarObras.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2780,
						"regions":
						{
						},
						"selection":
						[
							[
								239,
								239
							]
						],
						"settings":
						{
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/AbrirObra.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 430,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 168.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Prototipo3_Mostrar.sln",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 229.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
